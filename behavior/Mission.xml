<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<template name='Information.Font'>
		<Name>Segoe</Name>
		<Size>24</Size>
		<Color>FFFFFFFF</Color>
	</template>

	<window name='Tehbot_CombatMissions'>
		<Visible>1</Visible>
		<BackGroundColor></BackGroundColor>
		<Border>0</Border>
		<X>200</X>
		<Y>300</Y>
		<Width>1600</Width>
		<Height>1200</Height>
		<TitleBar>
			<Width>100%</Width>
			<Height>40</Height>
			<Border>0</Border>
			<BackgroundColor>FF000000</BackgroundColor>
			<Children>
				<Text name='CombatMissions_TitleBar_Title'>
					<X>0</X>
					<Y>6</Y>
					<Width>100%</Width>
					<Height>40</Height>
					<Alignment>Center</Alignment>
					<Text>Mission Configuration</Text>
				</Text>
				<button	Name='Close'>
					<X>r80</X>
					<Y>0</Y>
					<Width>80</Width>
					<Height>40</Height>
					<Text>Close</Text>
					<OnLeftClick>
						ui -unload "&filepath;/Mission"
					</OnLeftClick>
				</button>
				<button	Name='Halt'>
					<Font template='Button.Font' />
					<BackgroundColor>FF000000</BackgroundColor>
					<X>r240</X>
					<Y>0</Y>
					<Width>80</Width>
					<Height>40</Height>
					<Text>Halt</Text>
					<OnLeftClick>
						relay "all" -event Tehbot_ScheduleHalt
					</OnLeftClick>
					<OnMouseEnter>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This button will relay to all connected sessions running combat missions to halt after the next mission."]
					</OnMouseEnter>
					<OnMouseExit>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
					</OnMouseExit>
				</button>
				<button	Name='Resume'>
					<Font template='Button.Font' />
					<BackgroundColor>FF000000</BackgroundColor>
					<X>r360</X>
					<Y>0</Y>
					<Width>120</Width>
					<Height>40</Height>
					<Text>Resume</Text>
					<OnLeftClick>
						relay "all" -event Tehbot_ScheduleResume
					</OnLeftClick>
					<OnMouseEnter>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This button will relay to all connected sessions running combat missions to resume running, if they were halted using the Halt button."]
					</OnMouseEnter>
					<OnMouseExit>
						UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
					</OnMouseExit>
				</button>
			</Children>
		</TitleBar>
		<Children name="Tehbot_CombatMissions_Children">
			<Frame name="Tehbot_CombatMissions_Frame">
				<X>0</X>
				<Y>30</Y>
				<Width>100%</Width>
				<Height>100%</Height>
				<BackgroundColor>FF000000</BackgroundColor>
				<Border>1</Border>
				<BorderColor>FFFFFFFF</BorderColor>
				<Children name="Tehbot_CombatMissions_Frame_Children">
					<Text name='obj_CombatInformation'>
						<Font template='Information.Font' />
						<X>1%</X>
						<Y>1%</Y>
						<Width>98%</Width>
						<Height>18%</Height>
						<Wrap />
						<Text></Text>
					</Text>
					<Text name='obj_Combat_AgentListTitle'>
						<X>1%</X>
						<Y>5%</Y>
						<Width>30%</Width>
						<Height>2%</Height>
						<Alignment>Center</Alignment>
						<Text>Agent Configuration</Text>
					</Text>
					<combobox Name="Combat_AgentLevel">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>1%</X>
						<Y>7%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Items>
							<Item value='1'>Level 1</Item>
							<Item value='2'>Level 2</Item>
							<Item value='3'>Level 3</Item>
							<Item value='4'>Level 4</Item>
						</Items>
						<OnLoad>
							This.ItemByValue[${Script[Tehbot].VariableScope.Mission.Config.Level}]:Select
						</OnLoad>
						<OnSelect>
							UIElement[obj_Combat_AgentList@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:ClearItems
							variable index:being Agents
							variable iterator Ag
							EVE:GetAgents[Agents]
							Agents:GetIterator[Ag]
							if ${Ag:First(exists)}
								do
								{
									if ${This.SelectedItem.Value} == ${EVE.Agent[id,${Ag.Value.ID}].Level}
									{
										UIElement[obj_Combat_AgentList@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:AddItem[${Ag.Value.Name}]
									}
								}
								while ${Ag:Next(exists)}
							UIElement[obj_Combat_AgentList@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
							Script[Tehbot].VariableScope.Mission.Config:SetLevel[${This.SelectedItem.Value}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Use this to configure what level combat missions you will be running."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>

					</combobox>


					<listbox Name="obj_Combat_AgentList">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>12%</Y>
						<Width>30%</Width>
						<Height>20%</Height>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetAgent[${This.SelectedItem.Text}]
						</OnSelect>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.Level} > 0
							{
								variable index:being Agents
								variable iterator Ag
								EVE:GetAgents[Agents]
								Agents:GetIterator[Ag]
								if ${Ag:First(exists)}
									do
									{
										if ${Script[Tehbot].VariableScope.Mission.Config.Level} == ${EVE.Agent[id,${Ag.Value.ID}].Level}
										{
											This:AddItem[${Ag.Value.Name}]
										}
									}
									while ${Ag:Next(exists)}
								if ${Script[Tehbot].VariableScope.Mission.Config.Agent.NotNULLOrEmpty}
								{
									if ${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.Agent}](exists)}
										This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.Agent}]:Select
								}
							}
							else
							{
								This:Hide
							}


						</OnLoad>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Use this to configure the agent you will be running combat missions for.  This only lists agents that you've added to your address book."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</listbox>

					<Checkbox name='Halt'>
						<X>1%</X>
						<Y>1%</Y>
						<Width>32%</Width>
						<Height>4%</Height>
						<Text>Halt After Mission</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.Halt}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetHalt[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This will halt the bot after it completes the current mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Text name='KineticAmmoLabel'>
						<X>35%</X>
						<Y>3%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Kinetic Ammo</Text>
					</Text>
					<combobox Name="KineticAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>2%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetKineticAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ThermalAmmoLabel'>
						<X>35%</X>
						<Y>9%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Thermal Ammo</Text>
					</Text>
					<combobox Name="ThermalAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>8%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetThermalAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='EMAmmoLabel'>
						<X>35%</X>
						<Y>15%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>EM Ammo</Text>
					</Text>
					<combobox Name="EMAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>14%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.EMAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.EMAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetEMAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ExplosiveAmmoLabel'>
						<X>35%</X>
						<Y>21%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Explosive Ammo</Text>
					</Text>
					<combobox Name="ExplosiveAmmo">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>20%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmo}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetExplosiveAmmo[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>

					<Checkbox name='UseSecondary'>
						<X>35%</X>
						<Y>26%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Text>Use Long-range Ammo</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetSecondary[${This.Checked}]
							if ${This.Checked}
							{
								UIElement[KineticAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[KineticAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ThermalAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ThermalAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[EMAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[EMAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ExplosiveAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
								UIElement[ExplosiveAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
							}
							else
							{
								UIElement[KineticAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[KineticAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ThermalAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ThermalAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[EMAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[EMAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ExplosiveAmmoLabel2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
								UIElement[ExplosiveAmmo2@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
							}
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If you are flying a ship that needs to swap between a short-range, higher damage ammo and a long-range, lower damage ammo, select this option.  Make sure you have enough cargo space to fit two times the ammo, AND any mission items you need to loot!"]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Text name='KineticAmmoLabel2'>
						<X>35%</X>
						<Y>32%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Kinetic Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="KineticAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>31%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.KineticAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetKineticAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ThermalAmmoLabel2'>
						<X>35%</X>
						<Y>38%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Thermal Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="ThermalAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>37%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ThermalAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetThermalAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='EMAmmoLabel2'>
						<X>35%</X>
						<Y>44%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>EM Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="EMAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>43%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.EMAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetEMAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>
					<Text name='ExplosiveAmmoLabel2'>
						<X>35%</X>
						<Y>50%</Y>
						<Width>50%</Width>
						<Height>5%</Height>
						<Alignment>Left</Alignment>
						<Text>Explosive Ammo</Text>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
					</Text>
					<combobox Name="ExplosiveAmmo2">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>50%</X>
						<Y>49%</Y>
						<Width>49%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable index:item cargo
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipCargo]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
							variable iterator c
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Charge"]}, FALSE]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
										{
											This:AddItem[${c.Value.Type}]
										}
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary}](exists)}
									This:AddItem[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary}]
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.ExplosiveAmmoSecondary}]:Select
							This:SetZOrder[movetop]
							if !${Script[Tehbot].VariableScope.Mission.Config.UseSecondaryAmmo}
							{
								This:Hide
							}
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetExplosiveAmmoSecondary[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the long range ammo the bot will load and shoot when a mission is marked to have enemies weak to this damage type.  Note that the list is populated from the current ship's cargo hold and (if docked) your item hangar.  If you are using a Corporate Hangar, move some ammo to your item hangar while you configure the bot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>

					<Text name='AmmoSupplyTitle'>
						<X>1%</X>
						<Y>33%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>
							Ammo Supply Configuration
						</Text>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<Text name='AmmoSupplyValue'>
						<X>1%</X>
						<Y>37%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLoad>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Text>
					<button	Name='AmmoInc1'>
						<Font template='Button.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>22%</X>
						<Y>36%</Y>
						<Width>3%</Width>
						<Height>5%</Height>
						<Text>1</Text>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetAmmoAmountToLoad[${Math.Calc[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad} + 1]}]
							UIElement[AmmoSupplyValue@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</button>
					<button	Name='AmmoInc10'>
						<Font template='Button.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>25%</X>
						<Y>36%</Y>
						<Width>3%</Width>
						<Height>5%</Height>
						<Text>10</Text>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetAmmoAmountToLoad[${Math.Calc[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad} + 10]}]
							UIElement[AmmoSupplyValue@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</button>
					<button	Name='AmmoInc100'>
						<Font template='Button.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>28%</X>
						<Y>36%</Y>
						<Width>3%</Width>
						<Height>5%</Height>
						<Text>100</Text>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetAmmoAmountToLoad[${Math.Calc[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad} + 100]}]
							UIElement[AmmoSupplyValue@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</button>
					<button	Name='AmmoDec100'>
						<Font template='Button.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>1%</X>
						<Y>36%</Y>
						<Width>3%</Width>
						<Height>5%</Height>
						<Text>100</Text>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetAmmoAmountToLoad[${Math.Calc[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad} - 100]}]
							UIElement[AmmoSupplyValue@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</button>
					<button	Name='AmmoDec10'>
						<Font template='Button.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>4%</X>
						<Y>36%</Y>
						<Width>3%</Width>
						<Height>5%</Height>
						<Text>10</Text>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetAmmoAmountToLoad[${Math.Calc[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad} - 10]}]
							UIElement[AmmoSupplyValue@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</button>
					<button	Name='AmmoDec1'>
						<Font template='Button.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>7%</X>
						<Y>36%</Y>
						<Width>3%</Width>
						<Height>5%</Height>
						<Text>1</Text>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetAmmoAmountToLoad[${Math.Calc[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad} - 1]}]
							UIElement[AmmoSupplyValue@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[${Script[Tehbot].VariableScope.Mission.Config.AmmoAmountToLoad}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures how many rounds of ammo you will load before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</button>

					<Checkbox name='RangeLimit'>
						<X>1%</X>
						<Y>43%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Range Limit</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.RangeLimit}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetRangeLimit[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If this is checked, only shoot things if they are in range of your weapons.  Uncheck it if you want the bot to shoot things even outside range to agro them and get them moving towards you."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Checkbox name='DeclineLowSec'>
						<X>13%</X>
						<Y>43%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Decline Low-Sec Missions</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.DeclineLowSec}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDeclineLowSec[${This.Checked}]
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["If this is checked, the bot will decline missions with low-sec warning."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Checkbox name='UseDrones'>
						<X>1%</X>
						<Y>47%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Use Drones</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.UseDrones}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDrones[${This.Checked}]
							if ${This.Checked}
							{
								UIElement[DroneType@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
							}
							else
							{
								UIElement[DroneType@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
							}
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Check this if you'll be using drones to shoot small shit. This tells the bot to make sure to top off drones before running a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<combobox Name="DroneType">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>1%</X>
						<Y>52%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							if !${Script[Tehbot].VariableScope.Mission.Config.UseDrones}
								This:Hide
							variable index:item cargo
							variable iterator c
							EVEWindow[Inventory].ChildWindow[${Me.ShipID},ShipDroneBay]:GetItems[cargo]
							cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Drone"]}, FALSE]
							cargo:GetIterator[c]
							if ${c:First(exists)}
								do
								{
									if !${This.ItemByText[${c.Value.Type}](exists)}
									{
										This:AddItem[${c.Value.Type}]
									}
								}
								while ${c:Next(exists)}
							if ${Me.Station(exists)}
							{
								EVEWindow[Inventory].ChildWindow[${Me.Station.ID},StationItems]:GetItems[cargo]
								cargo:RemoveByQuery[${LavishScript.CreateQuery[Category =- "Drone"]}, FALSE]
								cargo:GetIterator[c]
								if ${c:First(exists)}
									do
									{
										if !${This.ItemByText[${c.Value.Type}](exists)}
											This:AddItem[${c.Value.Type}]
									}
									while ${c:Next(exists)}
							}
							if ${Script[Tehbot].VariableScope.Mission.Config.DroneType.NotNULLOrEmpty}
							{
								if !${This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.DroneType}](exists)}
									This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.DroneType}]:Select
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.DroneType}]:Select
							This:SetZOrder[movetop]
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetDroneType[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the type of drone the bot will top off before a mission."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>

					<Text name='MunitionStorageTitle'>
						<X>36%</X>
						<Y>60%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Ammo/Drone Storage</Text>
					</Text>
					<listbox Name="MunitionStorage">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>36%</X>
						<Y>62%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Items>
							<Item>Personal Hangar</Item>
							<Item>Corporation Hangar</Item>
						</Items>
						<OnLoad>
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.MunitionStorage}]:Select
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetMunitionStorage[${This.SelectedItem.Text}]
							switch ${This.SelectedItem.Text}
							{
								case Corporation Hangar
									UIElement[MunitionStorageFolderTitle@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
									UIElement[MunitionStorageFolder@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
									break
								case Personal Hangar
									UIElement[MunitionStorageFolderTitle@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
									UIElement[MunitionStorageFolder@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
									break
							}
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Use this field to configure where you would like Tehbot to unload salvage loot."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</listbox>

					<Text name='MunitionStorageFolderTitle'>
						<X>69%</X>
						<Y>60%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Corporation Folder</Text>
						<OnLoad>
							switch ${Script[Tehbot].VariableScope.Mission.Config.MunitionStorage}
							{
								case Corporation Hangar
									This:Show
									break
								default
									This:Hide
									break
							}
						</OnLoad>
					</Text>
					<listbox Name="MunitionStorageFolder">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>69%</X>
						<Y>62%</Y>
						<Width>30%</Width>
						<Height>10%</Height>
						<Items>
							<Item>Folder1</Item>
							<Item>Folder2</Item>
							<Item>Folder3</Item>
							<Item>Folder4</Item>
							<Item>Folder5</Item>
							<Item>Folder6</Item>
							<Item>Folder7</Item>
						</Items>
						<OnLoad>
							switch ${Script[Tehbot].VariableScope.Mission.Config.MunitionStorage}
							{
								case Corporation Hangar
									This:Show
									break
								default
									This:Hide
									break
							}
							This.ItemByText["${Script[Tehbot].VariableScope.Mission.Config.MunitionStorageFolder}"]:Select
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetMunitionStorageFolder[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This field is used to further configure your dropoff type for types that have additional options, like Corporate Hangars."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</listbox>

					<Text name='SalvagePrefixTitle'>
						<X>1%</X>
						<Y>60%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>Salvage Prefix</Text>
					</Text>
					<Textentry Name="SalvagePrefix">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>62%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.SalvagePrefix}]
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetSalvagePrefix[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The bot will put this at the front of corporate salvage bookmarks it creates.  If it is empty the bot will not create salvage bookmarks.  After this text the bot will add the name of the agent you are running missions for and the current eve time.  Consider putting something unique here to make sure bookmarks will not conflict with each other if you are running multiple mission runners."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Checkbox name='DropOffToContainer'>
						<X>1%</X>
						<Y>68%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<Text>Unload Loot To Container</Text>
						<OnLoad>
							if ${Script[Tehbot].VariableScope.Mission.Config.DropOffToContainer}
							{
								This:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							Script[Tehbot].VariableScope.Mission.Config:SetDropOffToContainer[${This.Checked}]
							if ${This.Checked}
							{
								UIElement[DropOffContainerName@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Show
							}
							else
							{
								UIElement[DropOffContainerName@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:Hide
							}
						</OnLeftClick>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["Check this if you want to unload loot to station container."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Checkbox>

					<Textentry Name="DropOffContainerName">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<X>1%</X>
						<Y>73%</Y>
						<Width>30%</Width>
						<Height>5%</Height>
						<OnLoad>
							This:SetText[${Script[Tehbot].VariableScope.Mission.Config.DropOffContainerName}]
							if ${Script[Tehbot].VariableScope.Mission.Config.DropOffToContainer}
							{
								This:Show
							}
							else
							{
								This:Hide
							}
						</OnLoad>
						<OnChange>
							Script[Tehbot].VariableScope.Mission.Config:SetDropOffContainerName[${This.Text}]
						</OnChange>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["The bot will unload all the loot from missions to a station container with the specified name."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</Textentry>

					<Text name='MissionConfigTitle'>
						<X>1%</X>
						<Y>79%</Y>
						<Width>98%</Width>
						<Height>5%</Height>
						<Alignment>Center</Alignment>
						<Text>
							Mission Configuration File
						</Text>
					</Text>
					<combobox Name="MissionConfig">
						<Font template='Information.Font' />
						<BackgroundColor>FF000000</BackgroundColor>
						<X>1%</X>
						<Y>81%</Y>
						<Width>98%</Width>
						<Height>5%</Height>
						<OnLoad>
							variable int Count = 0
							declare DataPath filepath script "${Script[Tehbot].CurrentDirectory}/data"
							declare MissionDataList filelist
							MissionDataList:GetFiles[${DataPath}/\*.iss]
							if ${MissionDataList.Files}
							{
								while ${MissionDataList.Files}>=${Count:Inc}
								{
									This:AddItem[${MissionDataList.File[${Count}].Filename}]
								}
							}
							This.ItemByText[${Script[Tehbot].VariableScope.Mission.Config.MissionFile}]:Select
						</OnLoad>
						<OnSelect>
							Script[Tehbot].VariableScope.Mission.Config:SetMissionFile[${This.SelectedItem.Text}]
						</OnSelect>
						<OnMouseEnter>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText["This configures the mission configuration file the bot will use to understand how to run missions.  If you make changes to the file externally, you must stop the bot (or set it to halt after the next mission) and start it again to reload the file."]
						</OnMouseEnter>
						<OnMouseExit>
							UIElement[Information@InformationFrame@Tehbot_CombatMissions_Frame@Tehbot_CombatMissions]:SetText[""]
						</OnMouseExit>
					</combobox>

					<Text name='InformationFrameTitle'>
						<X>1%</X>
						<Y>88%</Y>
						<Width>32%</Width>
						<Height>4%</Height>
						<Text>Information</Text>
						<OnLoad>
							This.Font:SetColor[FFFFFF00]
						</OnLoad>
					</Text>
					<Frame name="InformationFrame">
						<X>0%</X>
						<Y>90%</Y>
						<Width>100%</Width>
						<Height>12%</Height>
						<BackgroundColor>FF000000</BackgroundColor>
						<Border>1</Border>
						<BorderColor>FFFFFFFF</BorderColor>
						<Children>
							<Text name='Information'>
								<X>5%</X>
								<Y>5%</Y>
								<Width>90%</Width>
								<Height>90%</Height>
								<Wrap />
								<VerticalAlignment>Center</VerticalAlignment>
							</Text>
						</Children>
					</Frame>
				</Children>
			</Frame>
		</Children>
	</window>

</ISUI>
